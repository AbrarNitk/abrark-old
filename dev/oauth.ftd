-- ds.page: OAuth 2.0

- OAuth 2.0 and OpenID connect
- Simple login or forms auth
  - collect username and password via form
  - Hash password, verify hash, look up user info, look up auth info
  - save it to db -> Set-Cookie in the browser
  - Downsides
    - Security
    - Maintenance

- Identity use cases (pre-2010)
  - Simple login (forms and cookies)
  - Single sign-on across sites
  - Mobile app login
  - Delegated authorization
    - How can I let a website access my data without giving it my password.

- Delegated
- entrust (a task or responsibility) to another person, typically one who is
  less senior than oneself.
- send or authorize (someone) to do something as a representative.


# Delegated authorization with OAuth 2.0

I trust Gmail and I kind of trust Yelp. I want Yelp to have access to my contacts.

## How does google OAuth works

Yelp.com have a button Say [connect with google] that redirects user to
accounts.google.com, where user have to fill the email and password and then
google will ask that this application wants to access these and these things from
your account will you provide access, then user can choose yes or no, if user
chooses yes then yelo.com/callback(by passing code) and then yelp server will
call google server by passing this code and server secrets to get the access token
and set this to cookie.

## OAuth 2.0 Terminology

- Resource Owner
  - Who owns the data, meaning user who is owning the data.
- Client
  - Application where you are trying to logged-in using google auth, in this
  case, there is yelp.
- Authorization Server
  - accounts.google.com
- Resource Server
  - Where your data Apis exists
  - Where your resources actually stored, in this case there is google apis that
  client wants to access on user's behalf.
  - Sometimes authorization and resource server are the same thing but many times
  they are separate.
- Authorization Grant
  - Where user approves that I am giving permissions to access these resources
- Redirect Uri
  - Where authorization server redirects back to after successful login or failed
- Access Token
  - This token is used to access the data from resource server.

-- ds.image:
src: $assets.files.static.oauth.OAuth-2-Flow.png
width: fill