-- ds.page: Hostn Planning


-- ds.h1: Hostn Static

-- ds.h2: Reader Service

- deployed on fly
- tejar
  - todo: compression logic
- todo: host can domain or sub-domain, and on client machine it can contain
  port also: get-package-name from host
- s3 integration for reading files
  - hsr service will conatin the aws keys
  - min-io rs integration

-- ds.h2: Writer Service


-- ds.h3: fastn-cw

- http Service
- publish-static api
- login api
- s3 integration
- fly api integration for sub-domain and certificate registration
- depoy this service to heroku or Fly.io


-- ds.h3: fastn changes

- fastn login
  - an api call
  - keep local credentials per package
- fastn publish-static
  - get all the files from build
  - pass them to tejar
  - upload them to hsw
  - an api call api.hostn.com/publish-static/?package-name=<p>


-- ds.h1:

- hsr: static-hosting
  - can be used for non fastn static sites
  - privacy.json to add privacy/access control to any static site
- fastn-cw: 


-- ds.h1: Old Content


-- ds.h1: Personal Plan

- renams the projects and move the documents to existing projects
  - hostn will be primary repo for the hostn
  - fastn-controller-ui -> hostn.lib
  - move hostn-docs to hostn/docs
- i have to hands on the ftd
- create small and small pages in ftd only
- convert existing code to the 0.3 and up the site
- change db engine to postgres
- deploy the existing code to heroku
- listed down all the problems
  - code refactor
  - queue for creating and deleting apps
  - permission checks
  - logging improvements
- stripe payment
  - need to checkout the APIs and payment flow
- billing monthly
- email and notifications monthly


-- ds.h1: Persentational Plan

-- ds.h1: Shared Hosting

-- ds.h2: Why

In case of shared hosting what we can do is, we can implement the basic system
without pricing and make them available to everyone for try purpose.

- Because we need try.hostn.io asap.
- We want people to come and try it out
- So putting pricing at first and asking for the credit card will be an overhead to user


-- ds.h1: Static Hosting

We can omit this for because we are managing the repositories on GitHub
and gh pages giving the full functionality for this feature, so we can implement
this later.

-- ds.h2: Why Not Now

- Because GitHub is already providing the functionality, so for we can omit this approach.
- After managed hosting with pricing we can built it after that.


-- ds.h1: Managed Hosting

In managed hosting we will earn the money that is for sure, but for now we can give
priority to Shared hosting, whre poeple can try us freely and they see success in us
they can move to managed hosting.

-- ds.h2: Why

- We will earn money from it.


-- ds.h2: Why Not Now

- Because we want people to try us out with free version. So, Ideally
we should first build the free version of it with shared hosting.


-- ds.h1: Help From Colleagues

-- ds.h1: Amitu

- Need help to decide the approach
- Need help to decide the engineering design
- Need help in code review


-- ds.h1: Arpita

- Need help to decide the approach
- Need help in building pages in ftd

-- ds.h1: Ajit

- Need help on creating content for the users
- Need help in marketing the hostn.io also


-- ds.h1: Ganesh and Team

- Need their help in learning ftd and building pages


-- ds.h1: First Plan


- provide shared hosting
- without pricing

-- end: ds.page

