-- ds.page: Work Daily Update Jan 2023


-- ds.h1: 16th Demo Day Planning

- demo day planning meeting
  - status: done
  - time: 11:00 to 12:00
  - discussion-points:
  - whatever we have, make it more solid
  - 0.3 should be completed
  - fpm performance
  - 0.3 will take more of 2 days, processors are remaining
  - project: create fpm installer
  - if possible: brew install fpm, pip install fpm, apt-get install fpm
  - from bowser download the installer and install the binary
  - need to solve: fpm self update
  - we can put fpm-controller for back now
  - we have to focus on workshops now
  - editor: content editor people, etc...
  - editor: syntax highlighting for ftd etc...
  - we can have ftd files depends on javascript
  - we can take VSCode and integrate it with fpm editor
  - educate people ftd

- rithik will work on editor
- abrark will be working on processor and then installer
- wasif is working on importers

-- ds.h1: 06 Sat

- ftd processors
  - status: in process
  - get-data
  - request-data
  - toc
  - full-sitemap
  - sitemap
  - etc..


-- ds.h1: 06 Fri



- ftd processors
  - status: not completed
  - request-data
  - toc
  - full-sitemap
  - sitemap
  - etc..

- meeting with rithik
  - discussed about the editor


- meeting with wasif
  -  meeting-points:
  - done: completed till the markdown parser
  - pending: render ftd from markdown render
  - pending: github discussion update
  - pending: repo clean up
  - pending: rust mdbook convert
  - points:
  - we will different issues, for image, list, and table, etc...
  - for now we will only work for headings, para and summary to FPM.ftd file

-- ds.h1: 05 Thu

- dynamic-urls fixes
  - status: done
- sitemap error fixes
  - status: done
- http-examples fixes
  - status: done
- discussion with wasif
  - status: done


-- ds.h1: 04 Wed

- meeting with arpita and amitu
  - status: done
  - meeting-notes: nothing much discussed

- dynamic-urls fixes
  - status: in progress
  - issue: there is some issue that dynamic urls are not working

- processors
  - have to integrate the remaining processors


-- ds.h1: 03 Tue

- fixed http-example for package endpoint

- fpm processors
  - status: pending meeting with arpita
  - different processors
  - http, sitemap and all

- create an small app in flask in python
  - one todo app
    - /todos/
    - /add-todo/ -> redirected to /todos/
  - redirect api
  - form error handling
  - return some json data
  - docs: how to use this service

- my tasks
  - fpm meaningful logging
  - fpm performance
  - fpm code refactor accordingly
  - explore vercel cli tool to deploy on vercel and write an article
    - link: https://vercel.com/docs/cli/deploy

- meeting with rithik
  - explore the monaco editor options
  - we can now explore only with html
  - later we will embed the javascript in ftd

- meeting with wasif
  - status: done 
  - time: 30 mins
  - meetings-points:
  - markdown has it won renderer
  - renderer: https://github.com/rust-lang/mdBook/wiki/Third-party-plugins

-- ds.code:
lang: ftd

\-- ds.page: H

\-- ds.markdown:

# Hey Wasif

## How is it going

- L1
- L2
- [H](/md/)


-- ds.markdown:

- meeting with arpita
  - status: done
  - time: 30 mins
  - discussed about new http processor error with toc item


-- ds.h1: 02 Mon

- my tasks
  - fpm meaningful logging
  - fpm performance
  - fpm code refactor accordingly
  - explore vercel cli tool to deploy on vercel and write an article
    - link: https://vercel.com/docs/cli/deploy

- fpm processors
  - status: pending meeting with arpita
  - different processors
  - http, sitemap and all

- meeting with arpita
  - status: done
  - time: 12:30 to 01:00
  - discussion-points:
  - what to do in processor for 0.3
  - meeting-points:
  - have to change in every processor, by passing ast::VariableValue, VariableKind
  - arpita will give me doc.from_json function, which I have to call inside
    from processor probably each processor.

- meeting with rithik
  - status: done
  - time: 12:00 to 12:10
  - meeting-points:
  - rithik has to figured out how integrate VSCode in FPM
  - shared some of the references with him
  - vscode.dev, how github is doing, how stackblitz is doing
  - https://microsoft.github.io/monaco-editor/
  - https://github.com/microsoft/monaco-editor

- meeting with wasif
  - status: pending
  - time: 30 mins

- meeting with amitu
  - time: 01:00 to
  - status: in process
  - discussion-points:
  - any article for installer for windows, or other platforms
  - where to start and all
  - brew installer, windows installer, yum linux installer, apt-get installer
  - meeting-discussion:
  - monaco is the right approach: create the html files
  - create `.exe` file for windows
  - have to run multiple servers
  - or have to create multiple domains foo.local.com
  - and then based on host reroute the requests
  - editor also can have log viewer
  - fpm launcher | installer
  - fpm is equally git
  - `fastn | fpm` desktop app
  - launcher:
  - all the port that starts with `:8000` api /whoami/, it will return the path and package name
  - fpm desktop app is also running on fpm
  - it will also install fpm-desktop app(ftd file and fpm binary) and run 5432 controller port
  - only single instance will be run of fpm desktop
  - launch the browser localhost:5432
  - check how many processor are running
  - create a new fpm server
    - new folder or create a new package
    - we can fix all the ports
    - tauri powered app, it is an electron alternativs


- meeting with ajit
  - status: pending
  - time: 30 mins
  - discussion-point:
  - how can I help you? and what are you upto?

- 16th demo day planning meeting
  - status: done
  - time: 11 to 12
  
