-- ds.page: Work Daily Update Jan 2023

-- ds.h1: 31 Jan

- hostn static page live 
- fastn to fastn rename

- `package-doc` <https://github.com/FifthTry/package-doc/pull/15> 1. deployed(<https://fifthtry.github.io/package-doc/>)
- `code-block` <https://github.com/FifthTry/code-block/pull/6> 4. deployed(<https://fifthtry.github.io/code-block/>)
- `app-switcher` <https://github.com/FifthTry/app-switcher/pull/6> 2. deployed(<https://fifthtry.github.io/app-switcher/>)
- `button` <https://github.com/FifthTry/button/pull/6> 5. deployed(<https://fifthtry.github.io/button/>)
- `header` <https://github.com/FifthTry/header/pull/43> 7. deployed(<https://fifthtry.github.io/header/>)
- `doc-site` <https://github.com/FifthTry/doc-site/pull/57> 9. deployed(<https://fifthtry.github.io/doc-site/>)
- `typography` <https://github.com/FifthTry/typography/pull/10> 3. deployed(<https://fifthtry.github.io/typography/>)
- `octicon` <https://github.com/FifthTry/octicon/pull/8>
- `roboto` <https://github.com/FifthTry/roboto/pull/4> 8. deployed(<https://fifthtry.github.io/roboto/>)
- `product-switcher` <https://github.com/FifthTry/product-switcher/pull/17> 6. deployed(<https://fifthtry.github.io/product-switcher/>)
- `inter` <https://github.com/FifthTry/inter/pull/4> 10. deployed(<https://fifthtry.github.io/inter/>)
- `admonitions` <https://github.com/FifthTry/admonitions/pull/6> 11. deployed(https://fifthtry.github.io/admonitions/)
- `bling` <https://github.com/FifthTry/bling/pull/21> 12. deployed(<https://fifthtry.github.io/bling/>)
- `demo-day` <https://github.com/FifthTry/demo-day/pull/16> 13. deployed(<https://fifthtry.github.io/demo-day/>)
    - rename `fastn-ui` to `fastn-ui` done
- `fifthtry-brand-switcher` <https://github.com/FifthTry/fifthtry-brand-switcher/pull/8> 14. deployed(<https://fifthtry.github.io/fifthtry-brand-switcher/>)
- `blog-components` <https://github.com/FifthTry/blog-components/pull/8> 15. deployed(<https://fifthtry.github.io/blog-components/>)
- `common` <https://github.com/FifthTry/common/pull/3> 16. deployed(<https://fifthtry.github.io/common/>)
- `form` <https://github.com/FifthTry/form/pull/1> 17. deployed(<https://fifthtry.github.io/form/>)
- `event` <https://github.com/FifthTry/event/pull/3> 18. deployed(<https://fifthtry.github.io/event/>)
- `octicon` <https://github.com/FifthTry/octicon/pull/8> 19. deployed(<https://fifthtry.github.io/octicon/>)
- `dotcom` <https://github.com/FifthTry/dotcom/pull/122> 22. deployed(<https://www.fifthtry.com/>)
- `roboto-mono` <https://github.com/FifthTry/roboto-mono/pull/4> 20. deployed(<https://fifthtry.github.io/roboto-mono/>)
- `color-doc` <https://github.com/FifthTry/color-doc/pull/22> 21. deployed(<https://fifthtry.github.io/color-doc/>)
- `ftd.dev` <https://github.com/ftd-lang/ftd.dev/pull/61> 23. deployed(<https://ftd.dev/>)
- `fastn.io` <https://github.com/FifthTry/fastn.io/pull/3>



- all packages has changed
- merge fastn source code branch and build fastn
- merge all the packages branch
- start deploying packages
- then deploy dotcom, doc-site, and fastn.io

- fastn
  - source code changes in fastn
    - status: done
  - repo rename
    - status: pending
  - cli rename
    - status: done
  - fastn rename in build action
    - status: done
  - install.sh
    - status: done
  - changes in dotcom and docsite and related packages
    - status: in progress
  - all the packages that are using fastn has to change with fastn
  - FASTN.ftd to FASTN.ftd in all the packages and in code base also
  - check all the scritps/actions that are using fastn cli
  - domain rename fastn.dev to fast.io
  - need to publish the fastn crate on crates.io



-- ds.h1: 30th Jan

- fastn
  - source code changes in fastn
  - repo rename
  - cli rename
  - fastn rename in build action
  - all the packages that are using fastn has to change with fastn
  - FASTN.ftd to FASTN.ftd in all the packages and in code base also
  - check all the scritps/actions that are using fastn cli
  - domain rename fastn.dev to fast.io
  - need to publish the fastn crate on crates.io

- demo day planning
  - time: 11:00 to 12:00
  - status: done
- full-sitemap processor
  - status: done
- R1 Plan for hostn
  - Static Page(index.ftd)
  - Deploy it on heroku with index page
    - Hosting Provider for fastn packages
  - Basic Plan for other releases
  - Need to think about releases, how to deliver them
- Meeting with Ganesh for fastn deployment
- Learn ftd and build atleast two pages today
  -  for this I can pick fastn pages



-- ds.h1: 24 Jan

- add ftd attributes in interpreter
- design system change: variable name changes
- make couple of pages of the fastn in FTD, connect with Ganesh
- need to border-style and couple of properties


- hostn live
  - status: On Hold
  - description: Have to add CSS attributes in ftd interpreter first
  - [x] take update from rithik
    - First level meeting with rithik is done
  - [ ] update ftd 0.2 to ftd 0.3
      - status: in progress
      - It is taking time because UI got break and it is looking completely different
  - [ ] add postgresql database support
  - [ ] local testing
  - [ ] auth testing
  - [ ] test it locally, whether it is running or not with new ftd changes
  - [ ] check and test authentication
  - [ ] refactor codebase for controller python
  - [ ] deploy it on heroku


-- ds.h1: 23 Jan

- hostn live
  - [x] take update from rithik
    - First level meeting with rithik is done
  - [ ] update ftd 0.2 to ftd 0.3
  - [ ] test it locally, whether it is running or not with new ftd changes
  - [ ] check and test authentication
  - [ ] refactor codebase for controller python
  - [ ] deploy it on heroku


- meeting with rithik
  - fastn-controller-ui for ftd files and 
  - controller-service for backend
  - controller-docs for documentation
  - api calling and instances

- demoday meeting-notes




-- ds.h1: 17th Demo Day 

- fastn sqlite processors and more processors imported to ftd 0.3
- ftd performance testing
- fastn parsed document cache
- fastn logs and tracing


-- ds.h1: 20th Friday

- FifthTry Planning For Next


-- ds.h1: 19th Jan

- ftd performance
- added parsed document cache in the fastn nd changes in ftd also
- fastn logs like nginx logs


-- ds.h1: 18th Jan

- ftd performance
- target is less than 100ms for ftd.dev index.ftd page


-- ds.h1: 17th Jan

- fastn and ftd performance testing
- ftd.dev and other static file testing


-- ds.h1: 16th Jan

- fastn and ftd performance testing

-- ds.h1: 11th Wed

- ftd processor
  - status: done


-- ds.h1: 10th Tue


- ftd processors
  status: couple of them are remaining


-- ds.h1: 09 Mon

- ftd processors
  - status: in process
  - get-data
  - request-data
  - toc
  - full-sitemap
  - sitemap
  - etc..

- meeting with rithik

- meeting with arpita

- meeting with wasif

- demo day planning
  - status: done
  - points:
  - majorly we discussed about to deliver ftd:0.3
  - then we have to work on the performance of ftd and fastn
  - then I will create a installer for fastn windows, mac and ubuntu

-- ds.h1: 16th Demo Day Planning

- demo day planning meeting
  - status: done
  - time: 11:00 to 12:00
  - discussion-points:
  - whatever we have, make it more solid
  - 0.3 should be completed
  - fastn performance
  - 0.3 will take more of 2 days, processors are remaining
  - project: create fastn installer
  - if possible: brew install fastn, pip install fastn, apt-get install fastn
  - from bowser download the installer and install the binary
  - need to solve: fastn self update
  - we can put fastn-controller for back now
  - we have to focus on workshops now
  - editor: content editor people, etc...
  - editor: syntax highlighting for ftd etc...
  - we can have ftd files depends on javascript
  - we can take VSCode and integrate it with fastn editor
  - educate people ftd

- rithik will work on editor
- abrark will be working on processor and then installer
- wasif is working on importers



-- ds.h1: 07 Sat

- ftd processors
  - status: in process
  - get-data
  - request-data
  - toc
  - full-sitemap
  - sitemap
  - etc..


-- ds.h1: 06 Fri

- ftd processors
  - status: not completed
  - request-data
  - toc
  - full-sitemap
  - sitemap
  - etc..

- meeting with rithik
  - discussed about the editor


- meeting with wasif
  -  meeting-points:
  - done: completed till the markdown parser
  - pending: render ftd from markdown render
  - pending: github discussion update
  - pending: repo clean up
  - pending: rust mdbook convert
  - points:
  - we will different issues, for image, list, and table, etc...
  - for now we will only work for headings, para and summary to FASTN.ftd file

-- ds.h1: 05 Thu

- dynamic-urls fixes
  - status: done
- sitemap error fixes
  - status: done
- http-examples fixes
  - status: done
- discussion with wasif
  - status: done


-- ds.h1: 04 Wed

- meeting with arpita and amitu
  - status: done
  - meeting-notes: nothing much discussed

- dynamic-urls fixes
  - status: in progress
  - issue: there is some issue that dynamic urls are not working

- processors
  - have to integrate the remaining processors


-- ds.h1: 03 Tue

- fixed http-example for package endpoint

- fastn processors
  - status: pending meeting with arpita
  - different processors
  - http, sitemap and all

- create an small app in flask in python
  - one todo app
    - /todos/
    - /add-todo/ -> redirected to /todos/
  - redirect api
  - form error handling
  - return some json data
  - docs: how to use this service

- my tasks
  - fastn meaningful logging
  - fastn performance
  - fastn code refactor accordingly
  - explore vercel cli tool to deploy on vercel and write an article
    - link: https://vercel.com/docs/cli/deploy

- meeting with rithik
  - explore the monaco editor options
  - we can now explore only with html
  - later we will embed the javascript in ftd

- meeting with wasif
  - status: done 
  - time: 30 mins
  - meetings-points:
  - markdown has it won renderer
  - renderer: https://github.com/rust-lang/mdBook/wiki/Third-party-plugins

-- ds.code:
lang: ftd

\-- ds.page: H

\-- ds.markdown:

# Hey Wasif

## How is it going

- L1
- L2
- [H](/md/)


-- ds.markdown:

- meeting with arpita
  - status: done
  - time: 30 mins
  - discussed about new http processor error with toc item


-- ds.h1: 02 Mon

- my tasks
  - fastn meaningful logging
  - fastn performance
  - fastn code refactor accordingly
  - explore vercel cli tool to deploy on vercel and write an article
    - link: https://vercel.com/docs/cli/deploy

- fastn processors
  - status: pending meeting with arpita
  - different processors
  - http, sitemap and all

- meeting with arpita
  - status: done
  - time: 12:30 to 01:00
  - discussion-points:
  - what to do in processor for 0.3
  - meeting-points:
  - have to change in every processor, by passing ast::VariableValue, VariableKind
  - arpita will give me doc.from_json function, which I have to call inside
    from processor probably each processor.

- meeting with rithik
  - status: done
  - time: 12:00 to 12:10
  - meeting-points:
  - rithik has to figured out how integrate VSCode in FASTN
  - shared some of the references with him
  - vscode.dev, how github is doing, how stackblitz is doing
  - https://microsoft.github.io/monaco-editor/
  - https://github.com/microsoft/monaco-editor

- meeting with wasif
  - status: pending
  - time: 30 mins

- meeting with amitu
  - time: 01:00 to
  - status: in process
  - discussion-points:
  - any article for installer for windows, or other platforms
  - where to start and all
  - brew installer, windows installer, yum linux installer, apt-get installer
  - meeting-discussion:
  - monaco is the right approach: create the html files
  - create `.exe` file for windows
  - have to run multiple servers
  - or have to create multiple domains foo.local.com
  - and then based on host reroute the requests
  - editor also can have log viewer
  - fastn launcher | installer
  - fastn is equally git
  - `fastn | fastn` desktop app
  - launcher:
  - all the port that starts with `:8000` api /whoami/, it will return the path and package name
  - fastn desktop app is also running on fastn
  - it will also install fastn-desktop app(ftd file and fastn binary) and run 5432 controller port
  - only single instance will be run of fastn desktop
  - launch the browser localhost:5432
  - check how many processor are running
  - create a new fastn server
    - new folder or create a new package
    - we can fix all the ports
    - tauri powered app, it is an electron alternativs


- meeting with ajit
  - status: pending
  - time: 30 mins
  - discussion-point:
  - how can I help you? and what are you upto?

- 16th demo day planning meeting
  - status: done
  - time: 11 to 12
  
